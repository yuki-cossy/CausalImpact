dat <- read.csv("FLS-data.csv")
library(lars)
> # for reproducability
set.seed(1234)
cv.all <- cv1$cv
ofor(t in 2:5) cv.all <- cv.all+cv.lars(x,y)$cv
for(t in 2:5) cv.all <- cv.all+cv.lars(x,y)$cv
plot(cv.all ~ cv.index)
sval <- .22
sval <- .23
fit.coef <- rev(sort(p2$coef[p2$coef > 0]))
fit.coef
format(fit.coefs/fit.coefs[1],scientific=F,digits=1,nsmall=1)
format(fit.coef/fit.coef[1],scientific=F,digits=1,nsmall=1)
plot(error)
chosen.coefs
chosen.coefs/chosen.coefs[1]
temp <- fit.coef
temp
temp <- fit.coef/fit.coef[1]
temp
temp <- as.date.frame(fit.coef/fit.coef[1])
temp <- as.data.frame(fit.coef/fit.coef[1])
write.csv("fit-coef.csv",temp)
write.csv(file="fit-coef.csv",temp)
library(randomForest)
model.rf <- randomForest(y~x,importance=T)
model.rf <- randomForest(y~as.dateframe(x),importance=T)
model.rf <- randomForest(y~as.dataframe(x),importance=T)
model.rf <- randomForest(y~as.data.frame(x),importance=T)
model.rf <- randomForest(y~.,importance=T,data=x)
importanc(model.rf)
importance(model.rf)
sort(importance(model.rf))
importance(model.rf)
imp
imp <- importance(model.rf)$IncMSQ
imp <- importance(model.rf)[,1]
imp
rev(sort(imp))
rev(sort(imp)/sort(imp)[1])
tmp <- rev(sort(imp)
)
tmp <- rev(sort(imp))
tmp/tmp[1]
y.pred <- predict(model.rf)
error <- (y-y.pred)/y
plot(error)
error <- abs(y-y.pred)/y)
error <- abs(y-y.pred)/y
y
error <- abs((y-y.pred)/y)
error
plot(error)
mean(error)
mean(error[-38])
y.pred <- predict(model.rf)
error <- abs((y-y.pred)/y)
plot(error)
mean(error)
mean(error[-38])
error
y.pred
y.
y
plot(y ~ y.pred)
plot(log(y) ~ log(y.pred))
model.rf <- randomForest(y~.,importance=T,data=x)
imp <- importance(model.rf)[,1]
tmp <- rev(sort(imp))
tmp/tmp[1]
?predict
?predict.randomForest
y.pred <- predict(model.rf)
plot(y ~ y.pred)
error <- mean(abs((y - y.pred)/y))
error
plot(error)
error
error <- abs((y - y.pred)/y)
plot(error)
error
mean(error[-38])
y38 <- y[-38]
x38 <- x[-38,]
model.rf <- randomForest(y38~.,importance=T,data=x38)
y.pred <- predict(model.rf)
error <- abs((y - y.pred)/y)
error38 <- abs((y38 - y.pred)/y38)
mean(abs(erro38))
mean(abs(error38))
q()
x <- x[-38,]
dat.fix <- dat[-38,]
x <- as.matrix(dat.fix[,-1])
y <- dat.fix[,1]
best.lambda <- cv.out$lambda.min
log(best.lambda)
y.pred <- predict(model.lasso,s=best.lambda,newx=x)
coef.abs <- abs(model.coef[model.coef != 0])
q()
cv.all <- cv1$cv
cv.index <- cv1$index
for(t in 2:5) cv.all <- cv.all+cv.lars(x,y)$cv
plot(cv.all ~ cv.index)
q()
cv1 <- cv.glmnet(x,y)
cv1 <- cv.glmnet(x,y)
cv2 <- cv.glmnet(x,y)
cv3 <- cv.glmnet(x,y)
cv4 <- cv.glmnet(x,y)
cv5 <- cv.glmnet(x,y)
plot(cv1,cv2)
plot(cv1)
par(cfrow(2,2))
par(frow(2,2))
par(mfrow(2,2))
par(mfrow(2,2))
par(mfrow=c(2,2))
plot(cv1)
plot(cv2)
plot(cv3)
plot(cv4)
cv.out
cv.out
cv1
cv1$lambda.min
cv <- rep(0,50)
for (t in 1:50) cv[t] <- cv.glmnet(x,y)$lambda.in
for (t in 1:50) cv[t] <- cv.glmnet(x,y)$lambda.min
hist(cv)
mean(cv)
median(cv)
cv <- rep(0,100)
for (t in 1:100) cv[t] <- cv.glmnet(x,y)$lambda.min
hist(cv)
cv
mean(cv[cv < .10])
model.coef <- predict(model.lasso,s=.01,type="coef")[1:42,]
model.coef.ne0 <- model.coef[model.coef != 0]
abs.order <- order(abs(model.coef.ne0))
rev(model.coef.ne0[abs.order])
dim(dat)
dat <- read.csv("/home/hal/Working/JEP/Lasso/FLS-data.csv")
library(glmnet)
set.seed(1234)
x.test <- as.matrix(test[,-1])
x.train <- as.matrix(train[,-1])
y.test <- test$y
y.train <- train$y
model.lasso <- glmnet(x.train,y.train)
model.coef <- predict(model.lasso,s=best.lambda,type="coef")[1:42,]
y.pred <- predict(model.lasso,s=best.lambda,newx=x.test)
error(abs((y-y.pred)/y))
error <- abs((y-y.pred)/y)
error <- abs((y.test-y.pred)/y.test)
error
mean(error)
plot(error)
mean(error[-9])
error
hist(error)
names(dat)
names(dat)
